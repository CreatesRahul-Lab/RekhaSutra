import React, { useState, useCallback } from 'react';
import { useDropzone } from 'react-dropzone';
import { motion } from 'framer-motion';
import { useNavigate } from 'react-router-dom';
import { 
  Hand, 
  Upload, 
  Camera, 
  CheckCircle, 
  Star, 
  Clock, 
  Shield,
  ChevronRight,
  Download,
  User,
  Sparkles
} from 'lucide-react';
import toast from 'react-hot-toast';

const PalmReading = () => {
  const [selectedHand, setSelectedHand] = useState('right');
  const [uploadedImage, setUploadedImage] = useState(null);
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [analysisResult, setAnalysisResult] = useState(null);
  const [selectedPackage, setSelectedPackage] = useState('basic');
  const [step, setStep] = useState(1);
  const navigate = useNavigate();

  // Function to download report as PDF
  const downloadReport = () => {
    if (!analysisResult) return;
    
    // Create a comprehensive text report
    const reportContent = `
PALM READING ANALYSIS REPORT
Generated on: ${new Date().toLocaleDateString()}
Hand: ${selectedHand.charAt(0).toUpperCase() + selectedHand.slice(1)}

LIFE LINE ANALYSIS:
Strength: ${analysisResult.lifeLine?.strength || 'N/A'}%
Length: ${analysisResult.lifeLine?.length || 'N/A'}
Description: ${analysisResult.lifeLine?.description || 'N/A'}

HEART LINE ANALYSIS:
Strength: ${analysisResult.heartLine?.strength || 'N/A'}%
Curve: ${analysisResult.heartLine?.curve || 'N/A'}
Description: ${analysisResult.heartLine?.description || 'N/A'}

HEAD LINE ANALYSIS:
Strength: ${analysisResult.headLine?.strength || 'N/A'}%
Length: ${analysisResult.headLine?.length || 'N/A'}
Description: ${analysisResult.headLine?.description || 'N/A'}

FATE LINE ANALYSIS:
Strength: ${analysisResult.fateLine?.strength || 'N/A'}%
Clarity: ${analysisResult.fateLine?.clarity || 'N/A'}
Description: ${analysisResult.fateLine?.description || 'N/A'}

OVERALL PREDICTIONS:
${analysisResult.predictions?.map(pred => `• ${pred}`).join('\n') || 'N/A'}

REMEDIES AND RECOMMENDATIONS:
${analysisResult.remedies?.map(remedy => `• ${remedy}`).join('\n') || 'N/A'}

----
Generated by RekhaSutra - Your Spiritual Guidance Platform
Visit us at: https://rekhasutra.com
`;

    // Create and download the file
    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `palm-reading-report-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    toast.success('Report downloaded successfully!');
  };

  // Function to navigate to consultation booking
  const consultExpert = () => {
    // Navigate to consultation page with palm reading context
    navigate('/consultation', { 
      state: { 
        service: 'palm-reading',
        hasAnalysis: true,
        analysisData: analysisResult,
        selectedPackage: selectedPackage
      }
    });
  };

  const packages = [
    {
      id: 'basic',
      name: 'Basic Reading',
      price: 299,
      originalPrice: 499,
      duration: 'Instant',
      features: [
        'Life Line Analysis',
        'Heart Line Reading',
        'Head Line Interpretation',
        'Basic Personality Traits',
        'PDF Report'
      ],
      color: 'from-purple-500 to-pink-500',
      popular: false
    },
    {
      id: 'advanced',
      name: 'Advanced Reading',
      price: 799,
      originalPrice: 1299,
      duration: 'Instant',
      features: [
        'Complete Palm Analysis',
        'Fate Line Predictions',
        'Career & Finance Guidance',
        'Relationship Compatibility',
        'Health Indicators',
        'Detailed PDF Report',
        'Future Predictions'
      ],
      color: 'from-blue-500 to-cyan-500',
      popular: true
    },
    {
      id: 'premium',
      name: 'Premium Reading',
      price: 1499,
      originalPrice: 2499,
      duration: 'Instant + 30 min consultation',
      features: [
        'Everything in Advanced',
        'Personal Consultation',
        'Gemstone Recommendations',
        'Remedial Measures',
        'Annual Predictions',
        'Priority Support',
        'Video Analysis'
      ],
      color: 'from-green-500 to-emerald-500',
      popular: false
    }
  ];

  const onDrop = useCallback((acceptedFiles) => {
    const file = acceptedFiles[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        setUploadedImage(e.target.result);
        setStep(3);
        toast.success('Image uploaded successfully!');
      };
      reader.readAsDataURL(file);
    }
  }, []);

  const { getRootProps, getInputProps, isDragActive } = useDropzone({
    onDrop,
    accept: {
      'image/*': ['.jpeg', '.jpg', '.png', '.webp']
    },
    maxFiles: 1,
    maxSize: 5242880 // 5MB
  });

  const handleAnalysis = async () => {
    setIsAnalyzing(true);
    
    // Simulate AI analysis
    setTimeout(() => {
      setAnalysisResult({
        lifeLine: {
          strength: 85,
          length: 'Long',
          description: 'You have a strong life line indicating good health and vitality. You are likely to live a long, healthy life with strong constitution.',
          predictions: [
            'Strong physical health throughout life',
            'Good recovery from illnesses',
            'Active lifestyle recommended'
          ]
        },
        heartLine: {
          strength: 92,
          type: 'Curved',
          description: 'Your heart line shows you are emotionally expressive and passionate. You form deep connections and are loyal in relationships.',
          predictions: [
            'Deep, meaningful relationships',
            'Strong emotional intelligence',
            'Passionate nature in love'
          ]
        },
        headLine: {
          strength: 78,
          type: 'Straight',
          description: 'Your head line indicates practical thinking and good decision-making abilities. You approach problems logically.',
          predictions: [
            'Excellent analytical skills',
            'Good at problem-solving',
            'Practical approach to life'
          ]
        },
        fateLine: {
          strength: 70,
          clarity: 'Clear',
          description: 'Your fate line suggests a stable career path with opportunities for growth. Success will come through consistent effort.',
          predictions: [
            'Stable career progression',
            'Financial security in mid-life',
            'Recognition for hard work'
          ]
        },
        overall: {
          score: 82,
          personality: 'Balanced and Determined',
          luckyNumbers: [3, 7, 15, 21],
          luckyColors: ['Blue', 'Green', 'Silver'],
          recommendations: [
            'Focus on health and wellness',
            'Invest in long-term relationships',
            'Trust your intuition in decision-making',
            'Consider career opportunities in mid-year'
          ]
        }
      });
      setIsAnalyzing(false);
      setStep(4);
      toast.success('Analysis complete!');
    }, 3000);
  };

  const renderStepContent = () => {
    switch (step) {
      case 1:
        return (
          <div className="space-y-8">
            <div className="text-center mb-8">
              <h3 className="text-2xl font-bold text-white mb-4">Choose Your Package</h3>
              <p className="text-white/80">Select the palm reading package that best suits your needs</p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              {packages.map((pkg) => (
                <motion.div
                  key={pkg.id}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className={`relative rounded-2xl p-6 border cursor-pointer transition-all ${
                    selectedPackage === pkg.id
                      ? 'border-purple-500 bg-white/10'
                      : 'border-white/20 bg-white/5 hover:bg-white/10'
                  }`}
                  onClick={() => setSelectedPackage(pkg.id)}
                >
                  {pkg.popular && (
                    <div className="absolute -top-3 left-6 bg-gradient-to-r from-yellow-400 to-orange-500 text-black px-3 py-1 rounded-full text-xs font-bold">
                      MOST POPULAR
                    </div>
                  )}

                  <div className="text-center mb-4">
                    <h4 className="text-xl font-semibold text-white mb-2">{pkg.name}</h4>
                    <div className="flex items-center justify-center space-x-2 mb-2">
                      <span className="text-2xl font-bold text-white">₹{pkg.price}</span>
                      <span className="text-sm text-white/50 line-through">₹{pkg.originalPrice}</span>
                    </div>
                    <p className="text-white/70 text-sm">{pkg.duration}</p>
                  </div>

                  <ul className="space-y-2 mb-6">
                    {pkg.features.map((feature, idx) => (
                      <li key={idx} className="flex items-start text-sm text-white/80">
                        <CheckCircle className="w-4 h-4 text-green-400 mr-2 mt-0.5 flex-shrink-0" />
                        {feature}
                      </li>
                    ))}
                  </ul>

                  <div className={`w-full py-2 px-4 rounded-lg text-center font-medium transition-all ${
                    selectedPackage === pkg.id
                      ? `bg-gradient-to-r ${pkg.color} text-white`
                      : 'bg-white/10 text-white/70 hover:bg-white/20'
                  }`}>
                    {selectedPackage === pkg.id ? 'Selected' : 'Select Package'}
                  </div>
                </motion.div>
              ))}
            </div>

            <div className="text-center">
              <button
                onClick={() => setStep(2)}
                className="inline-flex items-center px-8 py-3 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-xl font-semibold hover:from-purple-600 hover:to-pink-600 transition-all transform hover:scale-105"
              >
                Continue
                <ChevronRight className="w-5 h-5 ml-2" />
              </button>
            </div>
          </div>
        );

      case 2:
        return (
          <div className="space-y-8">
            <div className="text-center mb-8">
              <h3 className="text-2xl font-bold text-white mb-4">Upload Your Palm Photo</h3>
              <p className="text-white/80">Upload a clear photo of your palm for accurate analysis</p>
            </div>

            {/* Hand Selection */}
            <div className="flex justify-center space-x-4 mb-8">
              <button
                onClick={() => setSelectedHand('left')}
                className={`px-6 py-3 rounded-xl font-medium transition-all ${
                  selectedHand === 'left'
                    ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white'
                    : 'bg-white/10 text-white/70 hover:bg-white/20'
                }`}
              >
                Left Hand
              </button>
              <button
                onClick={() => setSelectedHand('right')}
                className={`px-6 py-3 rounded-xl font-medium transition-all ${
                  selectedHand === 'right'
                    ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white'
                    : 'bg-white/10 text-white/70 hover:bg-white/20'
                }`}
              >
                Right Hand
              </button>
            </div>

            {/* Upload Area */}
            <div className="max-w-md mx-auto">
              <div
                {...getRootProps()}
                className={`border-2 border-dashed rounded-2xl p-8 text-center cursor-pointer transition-all ${
                  isDragActive
                    ? 'border-purple-500 bg-purple-500/10'
                    : 'border-white/30 hover:border-white/50 hover:bg-white/5'
                }`}
              >
                <input {...getInputProps()} />
                <div className="space-y-4">
                  <div className="mx-auto w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
                    <Upload className="w-8 h-8 text-white" />
                  </div>
                  <div>
                    <p className="text-white font-medium mb-2">
                      {isDragActive ? 'Drop your image here' : 'Drag & drop your palm photo here'}
                    </p>
                    <p className="text-white/60 text-sm">or click to browse</p>
                  </div>
                  <div className="text-white/50 text-xs">
                    Supported formats: JPG, PNG, WebP (Max 5MB)
                  </div>
                </div>
              </div>
            </div>

            {/* Tips */}
            <div className="bg-white/5 rounded-xl p-6 max-w-2xl mx-auto">
              <h4 className="text-white font-medium mb-4 flex items-center">
                <Camera className="w-5 h-5 mr-2" />
                Tips for Best Results
              </h4>
              <ul className="space-y-2 text-white/70 text-sm">
                <li>• Ensure good lighting and clear visibility of palm lines</li>
                <li>• Keep your hand flat and fingers slightly apart</li>
                <li>• Avoid shadows and reflections on the palm</li>
                <li>• Take the photo from directly above your palm</li>
                <li>• Make sure the entire palm is visible in the frame</li>
              </ul>
            </div>

            <div className="text-center">
              <button
                onClick={() => setStep(1)}
                className="inline-flex items-center px-6 py-2 bg-white/10 text-white rounded-lg font-medium hover:bg-white/20 transition-all mr-4"
              >
                Back
              </button>
            </div>
          </div>
        );

      case 3:
        return (
          <div className="space-y-8">
            <div className="text-center mb-8">
              <h3 className="text-2xl font-bold text-white mb-4">Review Your Upload</h3>
              <p className="text-white/80">Confirm your palm photo and proceed with analysis</p>
            </div>

            <div className="max-w-md mx-auto">
              <div className="bg-white/5 rounded-2xl p-6">
                <img
                  src={uploadedImage}
                  alt="Palm"
                  className="w-full h-64 object-cover rounded-xl mb-4"
                />
                <div className="flex items-center justify-between text-white/80 text-sm">
                  <span>Hand: {selectedHand.charAt(0).toUpperCase() + selectedHand.slice(1)}</span>
                  <span>Package: {packages.find(p => p.id === selectedPackage)?.name}</span>
                </div>
              </div>
            </div>

            <div className="text-center space-y-4">
              <button
                onClick={handleAnalysis}
                disabled={isAnalyzing}
                className="inline-flex items-center px-8 py-3 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-xl font-semibold hover:from-purple-600 hover:to-pink-600 transition-all transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed"
              >
                {isAnalyzing ? (
                  <>
                    <div className="loading-spinner w-5 h-5 mr-2"></div>
                    Analyzing...
                  </>
                ) : (
                  <>
                    <Sparkles className="w-5 h-5 mr-2" />
                    Start Analysis
                  </>
                )}
              </button>
              <div>
                <button
                  onClick={() => setStep(2)}
                  className="text-white/60 hover:text-white transition-colors"
                >
                  Upload Different Photo
                </button>
              </div>
            </div>

            {isAnalyzing && (
              <div className="bg-white/5 rounded-xl p-6 text-center">
                <div className="space-y-4">
                  <div className="w-16 h-16 mx-auto bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
                    <Hand className="w-8 h-8 text-white animate-pulse" />
                  </div>
                  <div>
                    <p className="text-white font-medium mb-2">AI Analysis in Progress</p>
                    <p className="text-white/60 text-sm">Our advanced AI is analyzing your palm lines...</p>
                  </div>
                  <div className="w-full bg-white/10 rounded-full h-2">
                    <div className="bg-gradient-to-r from-purple-500 to-pink-500 h-2 rounded-full animate-pulse" style={{ width: '60%' }}></div>
                  </div>
                </div>
              </div>
            )}
          </div>
        );

      case 4:
        return (
          <div className="space-y-8">
            <div className="text-center mb-8">
              <h3 className="text-2xl font-bold text-white mb-4">Your Palm Reading Results</h3>
              <p className="text-white/80">Detailed analysis of your palm lines and predictions</p>
            </div>

            {analysisResult && (
              <div className="space-y-6">
                {/* Overall Score */}
                <div className="bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-2xl p-6 border border-purple-500/20">
                  <div className="text-center mb-6">
                    <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full mb-4">
                      <span className="text-2xl font-bold text-white">{analysisResult.overall.score}</span>
                    </div>
                    <h4 className="text-xl font-semibold text-white mb-2">Overall Palm Score</h4>
                    <p className="text-white/80">{analysisResult.overall.personality}</p>
                  </div>
                </div>

                {/* Line Analysis */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {Object.entries(analysisResult).filter(([key]) => key !== 'overall').map(([key, line]) => (
                    <div key={key} className="bg-white/5 rounded-xl p-6">
                      <h4 className="text-lg font-semibold text-white mb-3 capitalize">
                        {key.replace(/([A-Z])/g, ' $1').trim()}
                      </h4>
                      <div className="space-y-3">
                        <div className="flex items-center justify-between">
                          <span className="text-white/70">Strength:</span>
                          <div className="flex items-center space-x-2">
                            <div className="w-20 h-2 bg-white/10 rounded-full">
                              <div 
                                className="h-2 bg-gradient-to-r from-green-400 to-blue-400 rounded-full"
                                style={{ width: `${line.strength}%` }}
                              ></div>
                            </div>
                            <span className="text-white text-sm">{line.strength}%</span>
                          </div>
                        </div>
                        <p className="text-white/80 text-sm">{line.description}</p>
                        <div className="space-y-1">
                          {line.predictions.map((prediction, idx) => (
                            <div key={idx} className="flex items-start text-sm text-white/70">
                              <Star className="w-3 h-3 text-yellow-400 mr-2 mt-0.5 flex-shrink-0" />
                              {prediction}
                            </div>
                          ))}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>

                {/* Recommendations */}
                <div className="bg-white/5 rounded-xl p-6">
                  <h4 className="text-lg font-semibold text-white mb-4">Personalized Recommendations</h4>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <h5 className="text-white font-medium mb-3">Lucky Numbers</h5>
                      <div className="flex space-x-2">
                        {analysisResult.overall.luckyNumbers.map((num, idx) => (
                          <div key={idx} className="w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white font-bold text-sm">
                            {num}
                          </div>
                        ))}
                      </div>
                    </div>
                    <div>
                      <h5 className="text-white font-medium mb-3">Lucky Colors</h5>
                      <div className="flex space-x-2">
                        {analysisResult.overall.luckyColors.map((color, idx) => (
                          <div key={idx} className="px-3 py-1 bg-white/10 rounded-full text-white/80 text-sm">
                            {color}
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                  <div className="mt-6">
                    <h5 className="text-white font-medium mb-3">Life Recommendations</h5>
                    <ul className="space-y-2">
                      {analysisResult.overall.recommendations.map((rec, idx) => (
                        <li key={idx} className="flex items-start text-sm text-white/80">
                          <CheckCircle className="w-4 h-4 text-green-400 mr-2 mt-0.5 flex-shrink-0" />
                          {rec}
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>

                {/* Actions */}
                <div className="flex flex-col sm:flex-row gap-4 justify-center">
                  <button 
                    onClick={downloadReport}
                    className="inline-flex items-center px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-xl font-semibold hover:from-purple-600 hover:to-pink-600 transition-all transform hover:scale-105"
                  >
                    <Download className="w-5 h-5 mr-2" />
                    Download Report
                  </button>
                  <button 
                    onClick={consultExpert}
                    className="inline-flex items-center px-6 py-3 bg-white/10 text-white rounded-xl font-semibold hover:bg-white/20 transition-all"
                  >
                    <User className="w-5 h-5 mr-2" />
                    Consult Expert
                  </button>
                </div>
              </div>
            )}
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 pt-20 px-4">
      <div className="max-w-4xl mx-auto">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-12"
        >
          <div className="inline-flex items-center px-4 py-2 bg-white/10 rounded-full backdrop-blur-sm border border-white/20 mb-6">
            <Hand className="w-4 h-4 text-purple-400 mr-2" />
            <span className="text-white/90 text-sm">AI Palm Reading</span>
          </div>
          <h1 className="text-4xl md:text-5xl font-bold text-white mb-6">
            Discover Your <span className="gradient-text">Palm Secrets</span>
          </h1>
          <p className="text-xl text-white/80 max-w-2xl mx-auto">
            Upload your palm photo and let our advanced AI analyze your life lines, 
            personality traits, and future predictions with remarkable accuracy.
          </p>
        </motion.div>

        {/* Progress Bar */}
        <div className="mb-12">
          <div className="flex items-center justify-center space-x-4 mb-4">
            {[1, 2, 3, 4].map((stepNumber) => (
              <div key={stepNumber} className="flex items-center">
                <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${
                  step >= stepNumber
                    ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white'
                    : 'bg-white/10 text-white/50'
                }`}>
                  {stepNumber}
                </div>
                {stepNumber < 4 && (
                  <div className={`w-12 h-1 mx-2 ${
                    step > stepNumber ? 'bg-gradient-to-r from-purple-500 to-pink-500' : 'bg-white/10'
                  }`}></div>
                )}
              </div>
            ))}
          </div>
          <div className="text-center text-white/60 text-sm">
            Step {step} of 4
          </div>
        </div>

        {/* Step Content */}
        <motion.div
          key={step}
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.4 }}
          className="bg-white/5 backdrop-blur-sm rounded-2xl p-8 border border-white/10"
        >
          {renderStepContent()}
        </motion.div>

        {/* Trust Indicators */}
        <div className="mt-12 grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="text-center">
            <div className="w-12 h-12 bg-gradient-to-br from-green-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-3">
              <Shield className="w-6 h-6 text-white" />
            </div>
            <h4 className="text-white font-medium mb-2">100% Secure</h4>
            <p className="text-white/60 text-sm">Your photos are encrypted and deleted after analysis</p>
          </div>
          <div className="text-center">
            <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-full flex items-center justify-center mx-auto mb-3">
              <Sparkles className="w-6 h-6 text-white" />
            </div>
            <h4 className="text-white font-medium mb-2">AI Powered</h4>
            <p className="text-white/60 text-sm">Advanced machine learning for accurate predictions</p>
          </div>
          <div className="text-center">
            <div className="w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-3">
              <Clock className="w-6 h-6 text-white" />
            </div>
            <h4 className="text-white font-medium mb-2">Instant Results</h4>
            <p className="text-white/60 text-sm">Get your detailed palm reading report instantly</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PalmReading;
